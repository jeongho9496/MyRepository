<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 0928 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /><!-- 어노테이션을 사용하기 위해 이클립스에 필요하다고 전달. 필수적으로 들어가야 됨 -->
	<!-- annotation-driven이 있어야 component를 사용할수 있다. -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- mapping="/resources/**" => 형식지정(고정) location="/resources/" => 물리적 파일명(변경가능) -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"><!-- ViewResolver: 뷰해결자 -->
		<beans:property name="prefix" value="/WEB-INF/views/" /><!-- 파일 앞에 오는것 -->
		<beans:property name="suffix" value=".jsp" />			<!-- 파일 형식 지정 -->
	</beans:bean><!-- 전체 JSP의 경로를 만들어줌 -->
	
	<context:component-scan base-package="com.mycompany.myapp" />
	<!-- component : Spring이 관리해야할 객체 @Controller를 base-package 안에서 찾음 -->
	<!-- base-package 밖의 패키지는 검색을 못한다. -->
	
	<!-- 1006 -->
	<!-- 관리 객체 생성 -->
	<beans:bean name="aObj" class="com.mycompany.myapp.exam09.A"/>
	<beans:bean name="bObj" class="com.mycompany.myapp.exam09.B"/>
	<beans:bean name="serviceAObj" class="com.mycompany.myapp.exam09.ServiceA"/>
	<beans:bean name="serviceBObj" class="com.mycompany.myapp.exam09.ServiceB"/>
	<beans:bean name="serviceCImpl1Obj" class="com.mycompany.myapp.exam09.ServiceCImpl1"/>
	<beans:bean name="serviceDImpl" class="com.mycompany.myapp.exam09.ServiceDImpl2"/>
	
	
	<!-- Exam09Controller 컨트롤러 객체를 찾아 가져오기 ->이미 만들어진 객체를 가져오기(없으면 관리객체로 생성) -->
	<!-- 동일한 객체를 2개 이상 만들지 않는다 무조건 하나만 만들어 공유해서 사용한다. -->
	<beans:bean name="exam09Controller" class="com.mycompany.myapp.exam09.Exam09Controller">
		<!-- setter 주입(beans:property) -->
		<beans:property name="a" ref="aObj"/> 
		<beans:property name="b" ref="bObj"/>
		<beans:property name="serviceA" ref="serviceAObj"/>
		<beans:property name="serviceB" ref="serviceBObj"/>
		<!-- 인터페이스 주입 -->
		<beans:property name="serviceC" ref="serviceCImpl1Obj"/>
		<beans:property name="serviceD" ref="serviceDImpl"/>
		<!-- name="setter이름" setter메소드(set때고 첫글자 소문자로 한 이름) 이름이 온다. ref = "setter매개값으로 전달한 객체(관리객체이름)" -> 해당 관리객체를 setter메소드에 참조한다. -->
		<!-- 값을 매개변수로 받고 싶은 경우 ref="~"가 아닌 value="~"로 대입한다. -->
	</beans:bean>
	
</beans:beans>
